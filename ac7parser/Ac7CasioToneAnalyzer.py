class Ac7CasioToneAnalyzer(object):
    def __init__(self):
        self.tone_to_drumset = {
         0 : "STANDARD SET 1",
         1: "STANDARD SET 2",
         2: "STANDARD SET 3",
         3: "STANDARD SET 4",
         8: "ROOM SET",
         9: "HIP-HOP SET",
         16: "POWER SET",
         17: "ROCK SET",
         24: "ELECTRONIC SET",
         25: "SYNTH SET 1",
         29: "DANCE SET",
         30: "SYNTH SET 2",
         31: "TRANCE SET",
         32: "JAZZ SET",
         40: "BRUSH SET",
         48: "ORCHESTRA SET",
         49: "ETHNIC SET 1",
         50: "ETHNIC SET 2",
        }
        for i in range(127):
            if i not in self.tone_to_drumset:
                self.tone_to_drumset[i] = "(unknown drumset)"

        self.tone_to_gm = {
        0: "PIANO 1",
        1: "PIANO 2",
        2: "PIANO 3",
        3: "HONKY-TONK",
        4: "E.PIANO 1",
        5: "E.PIANO 2",
        6: "HARPSICHORD",
        7: "CLAVI",
        8: "CELESTA",
        9: "GLOCKENSPIEL",
        10: "MUSIC BOX",
        11: "VIBRAPHONE",
        12: "MARIMBA",
        13: "XYLOPHONE",
        14: "TUBULAR BELL",
        15: "DULCIMER",
        16: "ORGAN 1",
        17: "ORGAN 2",
        18: "ORGAN 3",
        19: "PIPE ORGAN",
        20: "REED ORGAN",
        21: "ACCORDION",
        22: "HARMONICA",
        23: "BANDONEON",
        24: "NYLON STR.GUITAR",
        25: "STEEL STR.GUITAR",
        26: "JAZZ GUITAR",
        27: "CLEAN GUITAR",
        28: "MUTE GUITAR",
        29: "OVERDRIVE GT",
        30: "DISTORTION GT",
        31: "GT HARMONICS",
        32: "ACOUSTIC BASS",
        33: "FINGERED BASS",
        34: "PICKED BASS",
        35: "FRETLESS BASS",
        36: "SLAP BASS 1",
        37: "SLAP BASS 2",
        38: "SYNTH-BASS 1",
        39: "SYNTH-BASS 2",
        40: "VIOLIN",
        41: "VIOLA",
        42: "CELLO",
        43: "CONTRABASS",
        44: "TREMOLO STRINGS",
        45: "PIZZICATO",
        46: "HARP",
        47: "TIMPANI",
        48: "STRINGS 1",
        49: "STRINGS 2",
        50: "SYNTH-STRINGS 1",
        51: "SYNTH-STRINGS 2",
        52: "CHOIR AAHS",
        53: "VOICE DOO",
        54: "SYNTH-VOICE",
        55: "ORCHESTRA HIT",
        56: "TRUMPET",
        57: "TROMBONE",
        58: "TUBA",
        59: "MUTE TRUMPET",
        60: "FRENCH HORN",
        61: "BRASS",
        62: "SYNTH-BRASS 1",
        63: "SYNTH-BRASS 2",
        64: "SOPRANO SAX",
        65: "ALTO SAX",
        66: "TENOR SAX",
        67: "BARITONE SAX",
        68: "OBOE",
        69: "ENGLISH HORN",
        70: "BASSOON",
        71: "CLARINET",
        72: "PICCOLO",
        73: "FLUTE",
        74: "RECORDER",
        75: "PAN FLUTE",
        76: "BOTTLE BLOW",
        77: "SHAKUHACHI",
        78: "WHISTLE",
        79: "OCARINA",
        80: "SQUARE LEAD",
        81: "SAW LEAD",
        82: "CALLIOPE",
        83: "CHIFF LEAD",
        84: "CHARANG",
        85: "VOICE LEAD",
        86: "FIFTH LEAD",
        87: "BASS+LEAD",
        88: "FANTASY",
        89: "WARM PAD",
        90: "POLYSYNTH",
        91: "SPACE CHOIR",
        92: "BOWED GLASS",
        93: "METAL PAD",
        94: "HALO PAD",
        95: "SWEEP PAD",
        96: "RAIN DROP",
        97: "SOUND TRACK",
        98: "CRYSTAL",
        99: "ATMOSPHERE",
        100: "BRIGHTNESS",
        101: "GOBLINS",
        102: "ECHOES",
        103: "SF",
        104: "SITAR",
        105: "BANJO",
        106: "SHAMISEN",
        107: "KOTO",
        108: "THUMB PIANO",
        109: "BAGPIPE",
        110: "FIDDLE",
        111: "SHANAI",
        112: "TINKLE BELL",
        113: "AGOGO",
        114: "STEEL DRUMS",
        115: "WOOD BLOCK",
        116: "TAIKO",
        117: "MELODIC TOM",
        118: "SYNTH-DRUM",
        119: "REVERSE CYMBAL",
        120: "GT FRET NOISE",
        121: "BREATH NOISE",
        122: "SEASHORE",
        123: "BIRD",
        124: "TELEPHONE",
        125: "HELICOPTER",
        126: "APPLAUSE",
        127: "GUNSHOT",
        }

    def tone_to_descr(self, idx, tone):
        modidx = idx % 8
        if modidx <= 1:
            if tone in self.tone_to_drumset:
                return self.tone_to_drumset[tone]
            else:
                return "unknown drum tone {0}".format(tone)
        else:
            if tone in self.tone_to_gm:
                return self.tone_to_gm[tone]
            else:
                return "unknown tone {0}".format(tone)
